services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    networks:
      - mynet
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-postgres}
      - REDIS_URL=redis://:@redis:6379/0
      - AMQP_URL=amqp://user:password@rabbitmq:5672/
      - WEB_CONCURRENCY=2
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: 1
        reservations:
          memory: 256M
          cpus: 1
    depends_on:
      - postgres
      - rabbitmq
      - redis
      - redis-worker
      - rb-worker
  redis-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command:
      - /bin/sh
      - -c
      - |
        python -m app redis_worker
    networks:
      - mynet
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-postgres}
      - REDIS_URL=redis://:@redis:6379/0
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: 0.2
        reservations:
          memory: 128M
          cpus: 0.2
    depends_on:
      - postgres
      - redis
  rb-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command:
      - /bin/sh
      - -c
      - |
        python -m app rb_worker
    networks:
      - mynet
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-postgres}
      - REDIS_URL=redis://:@redis:6379/0
      - AMQP_URL=amqp://user:password@rabbitmq:5672/
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: 0.2
        reservations:
          memory: 128M
          cpus: 0.2
    depends_on:
      - postgres
      - rabbitmq
      - redis
  postgres:
    image: postgres:14.18
    networks:
      - mynet
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    volumes:
      - .data/postgres:/var/lib/postgresql/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: 0.25
        reservations:
          memory: 256M
          cpus: 0.25
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3
  redis:
    image: "redis:7.4.5-alpine3.21"
    networks:
      - mynet
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: 0.2
        reservations:
          memory: 256M
          cpus: 0.2
  rabbitmq:
    image: "rabbitmq:3.13.7-management-alpine"
    ports:
      - "15672:15672"
    networks:
      - mynet
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - ./.data/rabbitmq:/var/lib/rabbitmq
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: 0.2
        reservations:
          memory: 256M
          cpus: 0.2
networks:
  mynet:
